site_name: uv
theme:
  name: material
  logo: assets/logo-letter.svg
  favicon: assets/favicon.ico
  features:
    - navigation.path
    - navigation.instant
    - navigation.instant.prefetch
    - navigation.instant.progress
    - navigation.sections
    - navigation.indexes
    - navigation.tracking
    - content.code.annotate
    - toc.follow
    - navigation.footer
    - navigation.top
    - content.code.copy
    - content.tabs.link
  palette:
    # Note: Using the system theme works with the insiders version
    # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#automatic-light-dark-mode
    - media: "(prefers-color-scheme)"
      toggle:
        icon: material/brightness-auto
        name: Switch to light mode
    - media: "(prefers-color-scheme: light)"
      scheme: astral-light
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: astral-dark
      toggle:
        icon: material/brightness-4
        name: Switch to system preference
  custom_dir: docs/.overrides
repo_url: https://github.com/astral-sh/uv
repo_name: uv
site_author: charliermarsh
site_url: https://docs.astral.sh/uv/
site_dir: site/uv
site_description: uv is an extremely fast Python package and project manager, written in Rust.
markdown_extensions:
  - admonition
  - pymdownx.details
  - pymdownx.snippets:
  - pymdownx.magiclink:
  - attr_list:
  - toc:
      anchorlink: true
      anchorlink_class: "toclink"
  - md_in_html:
  - pymdownx.inlinehilite:
  - pymdownx.superfences:
  - markdown.extensions.attr_list:
  - pymdownx.keys:
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.tabbed:
      alternate_style: true
plugins:
  - search
  - git-revision-date-localized:
      timezone: UTC # It can only be in UTC unless the ISO time can include timezone.
  - redirects:
      # Note that redirecting an anchor, e.g., `concepts/projects/#managing-dependencies` must be done
      # client-side and is implemented in `extra.js` instead.
      redirect_maps:
        "guides/publish.md": "guides/package.md"
        "concepts/workspaces.md": "concepts/projects/workspaces.md"
        "concepts/dependencies.md": "concepts/projects/dependencies.md"
        "reference/versioning.md": "reference/policies/versioning.md"
        "reference/platforms.md": "reference/policies/platforms.md"
        "reference/build_failures.md": "reference/troubleshooting/build-failures.md"
        "configuration/installer.md": "reference/installer.md"
        "configuration/authentication.md": "concepts/authentication.md"
        "configuration/build-backend.md": "concepts/build-backend.md"
        "configuration/files.md": "concepts/configuration-files.md"
        "configuration/indexes.md": "concepts/indexes.md"
        "configuration/environment.md": "reference/environment.md"
  - llmstxt:
      markdown_description: |
        You can use uv to install Python dependencies, run scripts, manage virtual environments,
        build and publish packages, and even install Python itself. uv is capable of replacing
        `pip`, `pip-tools`, `pipx`, `poetry`, `pyenv`, `twine`, `virtualenv`, and more.

        uv includes both a pip-compatible CLI (prepend `uv` to a pip command, e.g., `uv pip install ruff`)
        and a first-class project interface (e.g., `uv add ruff`) complete with lockfiles and
        workspace support.
      sections:
        Getting started:
          - getting-started/installation.md
          - getting-started/first-steps.md
          - getting-started/features.md
        Guides:
          - guides/install-python.md
          - guides/scripts.md
          - guides/tools.md
          - guides/projects.md
          - guides/package.md
        Integrations:
          - guides/integration/docker.md
          - guides/integration/jupyter.md
          - guides/integration/marimo.md
          - guides/integration/github.md
          - guides/integration/gitlab.md
          - guides/integration/pre-commit.md
          - guides/integration/pytorch.md
          - guides/integration/fastapi.md
          - guides/integration/alternative-indexes.md
          - guides/integration/dependency-bots.md
          - guides/integration/aws-lambda.md
        Projects:
          - concepts/projects/layout.md
          - concepts/projects/init.md
          - concepts/projects/dependencies.md
          - concepts/projects/run.md
          - concepts/projects/sync.md
          - concepts/projects/config.md
          - concepts/projects/build.md
          - concepts/projects/workspaces.md
        Features:
          - concepts/tools.md
          - concepts/python-versions.md
          - concepts/configuration-files.md
          - concepts/indexes.md
          - concepts/resolution.md
          - concepts/build-backend.md
          - concepts/authentication.md
          - concepts/cache.md
        The pip interface:
          - pip/environments.md
          - pip/packages.md
          - pip/inspection.md
          - pip/dependencies.md
          - pip/compile.md
          - pip/compatibility.md
        Reference:
          - reference/cli.md
          - reference/settings.md
          - reference/environment.md
          - reference/installer.md
extra_css:
  - stylesheets/extra.css
extra_javascript:
  - js/extra.js
extra:
  analytics:
    provider: fathom
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/astral-sh/uv
    - icon: fontawesome/brands/discord
      link: https://discord.com/invite/astral-sh
    - icon: fontawesome/brands/python
      link: https://pypi.org/project/uv/
    - icon: fontawesome/brands/x-twitter
      link: https://x.com/astral_sh
nav:
  - Introduction: index.md
  - Getting started:
      - getting-started/index.md
      - Installation: getting-started/installation.md
      - First steps: getting-started/first-steps.md
      - Features: getting-started/features.md
      - Getting help: getting-started/help.md
  - Guides:
      - guides/index.md
      - Installing Python: guides/install-python.md
      - Running scripts: guides/scripts.md
      - Using tools: guides/tools.md
      - Working on projects: guides/projects.md
      - Publishing packages: guides/package.md
      - Migration:
          - guides/migration/index.md
          - From pip to a uv project: guides/migration/pip-to-project.md
      - Integrations:
          - guides/integration/index.md
          - Docker: guides/integration/docker.md
          - Jupyter: guides/integration/jupyter.md
          - marimo: guides/integration/marimo.md
          - GitHub Actions: guides/integration/github.md
          - GitLab CI/CD: guides/integration/gitlab.md
          - Pre-commit: guides/integration/pre-commit.md
          - PyTorch: guides/integration/pytorch.md
          - FastAPI: guides/integration/fastapi.md
          - Alternative indexes: guides/integration/alternative-indexes.md
          - Dependency bots: guides/integration/dependency-bots.md
          - AWS Lambda: guides/integration/aws-lambda.md
  - Concepts:
      - concepts/index.md
      - Projects:
          - concepts/projects/index.md
          - Structure and files: concepts/projects/layout.md
          - Creating projects: concepts/projects/init.md
          - Managing dependencies: concepts/projects/dependencies.md
          - Running commands: concepts/projects/run.md
          - Locking and syncing: concepts/projects/sync.md
          - Configuring projects: concepts/projects/config.md
          - Building distributions: concepts/projects/build.md
          - Using workspaces: concepts/projects/workspaces.md
      - Tools: concepts/tools.md
      - Python versions: concepts/python-versions.md
      - Configuration files: concepts/configuration-files.md
      - Package indexes: concepts/indexes.md
      - Resolution: concepts/resolution.md
      - Build backend: concepts/build-backend.md
      - Authentication: concepts/authentication.md
      - Caching: concepts/cache.md
      # Note:  The `pip` section was moved to the `concepts/` section but the
      # top-level directory structure was retained to ease the transition.
      - The pip interface:
          - pip/index.md
          - Using environments: pip/environments.md
          - Managing packages: pip/packages.md
          - Inspecting environments: pip/inspection.md
          - Declaring dependencies: pip/dependencies.md
          - Locking environments: pip/compile.md
          - Compatibility with pip: pip/compatibility.md
  - Reference:
      - reference/index.md
      - Commands: reference/cli.md
      - Settings: reference/settings.md
      - Environment variables: reference/environment.md
      - Installer: reference/installer.md
      - Troubleshooting:
          - reference/troubleshooting/index.md
          - Build failures: reference/troubleshooting/build-failures.md
          - Reproducible examples: reference/troubleshooting/reproducible-examples.md
      - Resolver: reference/resolver-internals.md
      - Benchmarks: reference/benchmarks.md
      - Policies:
          - reference/policies/index.md
          - Versioning: reference/policies/versioning.md
          - Platform support: reference/policies/platforms.md
          - License: reference/policies/license.md
validation:
  omitted_files: warn
  absolute_links: warn
  unrecognized_links: warn
